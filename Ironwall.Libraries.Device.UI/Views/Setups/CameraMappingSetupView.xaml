<UserControl x:Class="Ironwall.Libraries.Device.UI.Views.Setups.CameraMappingSetupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:cal="http://www.caliburnproject.org"
			 xmlns:enums="clr-namespace:Ironwall.Libraries.Enums;assembly=Ironwall.Libraries.Enums"
             xmlns:utils="clr-namespace:Ironwall.Libraries.Utils;assembly=Ironwall.Libraries.Utils"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<utils:EnumCameraModeToValueConverter x:Key="EnumCameraModeToValueConverter" />
		<utils:EnumCameraModeToTextConverter x:Key="EnumCameraModeToTextConverter" />
		<utils:EnumCameraTypeToValueConverter x:Key="EnumCameraTypeToValueConverter" />
		<utils:EnumCameraTypeToTextConverter x:Key="EnumCameraTypeToTextConverter" />
		<utils:BindingProxy x:Key="CameraDeviceProxy" Data="{Binding}" />
	</UserControl.Resources>
	<Grid Height="340">
		<Grid.RowDefinitions>
			<RowDefinition Height="50" />
			<RowDefinition Height="1*" />
			<RowDefinition Height="40" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0"
              Margin="10 10">
			<Grid.RowDefinitions>
				<RowDefinition Height="30" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*" />
				<ColumnDefinition Width="2*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Column="0"
                       Grid.ColumnSpan="2"
                       VerticalAlignment="Center"
                       Foreground="White"
                       FontWeight="Bold"
                       Style="{StaticResource BodyTextBlockStyle}"
                       Text="{DynamicResource CameraMapping_DataGridTitle}" />
			
			<Button Grid.Column="3"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource CameraMapping_Add}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickInsertButton($source, $eventArgs]
				</cal:Message.Attach>
				<md:PackIcon Width="20"
                             Height="20"
                             Kind="AddBox" />
			</Button>
			<Button Grid.Column="4"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource CameraMapping_Remove}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickDeleteButton($source, $eventArgs]
				</cal:Message.Attach>
				<md:PackIcon Width="20"
                             Height="20"
                             Kind="MinusBox" />
			</Button>
			<Button Grid.Column="5"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource Refresh}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickReloadButton($source, $eventArgs)]
				</cal:Message.Attach>
				<md:PackIcon Width="20"
                             Height="20"
                             Kind="CircleArrows" />
			</Button>
			<Button Grid.Column="6"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource Save}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickSaveButton($source, $eventArgs]
				</cal:Message.Attach>
				<md:PackIcon Width="20"
                             Height="20"
                             Kind="FloppyDisc" />
			</Button>

		</Grid>
		<Grid Height ="300"
			  Grid.Row="1">
			<ProgressBar Width="50"
								 Height="50"
								 Margin="16"
								 Visibility="{Binding IsVisible, Converter={StaticResource BoolToInverseVisibleConverter}}"
								 Style="{DynamicResource MaterialDesignCircularProgressBar}"
								 IsIndeterminate="True"
								 Value="44" />
		</Grid>
		<DataGrid Grid.Row="1"
				  Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                  ItemsSource="{Binding ViewModelProvider}"
                  AlternationCount="{Binding Items.Count, RelativeSource={RelativeSource Self}}"
                  Style="{StaticResource MaterialDesignDataGrid }"
                  AutoGenerateColumns="False"
                  EnableRowVirtualization="True"
                  CanUserSortColumns="True"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="True"
                  SelectionMode="Single"
                  SelectionUnit="FullRow"
                  SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                  CanUserAddRows="False"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Visible">
			<DataGrid.Columns>
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<CheckBox Style="{StaticResource MaterialDesignCheckBox}"
                                      IsChecked="{Binding IsSelected, Mode=TwoWay}">
								<cal:Message.Attach>
									[Event Click] = [Action OnClickCheckBoxItem($source, $eventArgs)];
								</cal:Message.Attach>
							</CheckBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>

					<DataGridTemplateColumn.Header>
						<Border Padding="0 0 0 0"
                                Margin="-2 0 0 0">
							<CheckBox Style="{StaticResource MaterialDesignCheckBox}"
                                      IsChecked="{Binding Data.IsAllChecked, Mode=TwoWay, Source={StaticResource CameraDeviceProxy}}"
                                      HorizontalAlignment="Center">
								<cal:Message.Attach>
									[Event Click] = [Action OnClickCheckBoxColumnHeader($source, $eventArgs)];
								</cal:Message.Attach>
							</CheckBox>
						</Border>
					</DataGridTemplateColumn.Header>
				</DataGridTemplateColumn>

				<!-- Id -->
				<DataGridTextColumn Header="Id"
                                    Binding="{Binding Id}">
					<DataGridTextColumn.HeaderStyle>
						<Style TargetType="{x:Type DataGridColumnHeader}"
                               BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
							<Setter Property="HorizontalAlignment"
                                    Value="Center" />
							<Setter Property="VerticalAlignment"
                                    Value="Center" />
						</Style>
					</DataGridTextColumn.HeaderStyle>
					<DataGridTextColumn.ElementStyle>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="HorizontalAlignment"
                                    Value="Center" />
							<Setter Property="VerticalAlignment"
                                    Value="Center" />
						</Style>
					</DataGridTextColumn.ElementStyle>
				</DataGridTextColumn>

				<!-- Name -->
				<DataGridTemplateColumn  Header="Group"
                                         SortMemberPath="NameDevice"
                                         CanUserSort="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="{Binding Group, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<!-- Sensor -->
				<DataGridTemplateColumn  Header="Sensor"
                                         SortMemberPath="NameDevice"
                                         CanUserSort="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="{Binding Sensor.DeviceName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<ComboBox VerticalAlignment="Center"
									  HorizontalContentAlignment="Center"
									  IsEditable="False"
									  ItemsSource="{Binding  Data.SensorViewModelProvider, Source={StaticResource CameraDeviceProxy}, UpdateSourceTrigger=PropertyChanged}"
									  SelectedItem="{Binding Sensor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									  >
								<ComboBox.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</ComboBox.ItemsPanel>
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding DeviceName}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
								<ComboBox.ItemContainerStyle>
									<Style TargetType="{x:Type ComboBoxItem}" />
								</ComboBox.ItemContainerStyle>
							</ComboBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				

				<!-- First Preset -->
				<!--<DataGridTemplateColumn  Header="Fisrt Preset"
                                         SortMemberPath="NameDevice"
                                         CanUserSort="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="{Binding FirstPreset.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>-->
				
				<DataGridTemplateColumn CanUserSort="True"
										Header="Fisrt Preset"
										SortMemberPath="FirstPreset">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock x:Name="DataSelf"
									   VerticalAlignment="Center"
									   Text="{Binding FirstPreset.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									   TextAlignment="Center" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<ComboBox VerticalAlignment="Center"
									  HorizontalContentAlignment="Center"
									  IsEditable="False"
									  ItemsSource="{Binding  Data.PresetViewModelProvider, Source={StaticResource CameraDeviceProxy}, UpdateSourceTrigger=PropertyChanged}"
									  SelectedItem="{Binding FirstPreset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									  >
								<ComboBox.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</ComboBox.ItemsPanel>
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Id}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
								<ComboBox.ItemContainerStyle>
									<Style TargetType="{x:Type ComboBoxItem}" />
								</ComboBox.ItemContainerStyle>
							</ComboBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>



				<!-- Second Preset -->
				<DataGridTemplateColumn  Header="Second Preset"
                                         SortMemberPath="NameDevice"
                                         CanUserSort="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="{Binding SecondPreset.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<ComboBox VerticalAlignment="Center"
									  HorizontalContentAlignment="Center"
									  IsEditable="False"
									  ItemsSource="{Binding  Data.PresetViewModelProvider, Source={StaticResource CameraDeviceProxy}, UpdateSourceTrigger=PropertyChanged}"
									  SelectedItem="{Binding SecondPreset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									  >
								<ComboBox.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</ComboBox.ItemsPanel>
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Id}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
								<ComboBox.ItemContainerStyle>
									<Style TargetType="{x:Type ComboBoxItem}" />
								</ComboBox.ItemContainerStyle>
							</ComboBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
		</DataGrid>
		<StackPanel Grid.Row="2"
                    VerticalAlignment="Center"
                    Margin="10"
                    Orientation="Horizontal">

			<TextBlock Text="{DynamicResource Camera_SelectedItem}" />
			<TextBlock Text="{Binding SelectedItemCount, UpdateSourceTrigger=PropertyChanged}" />
		</StackPanel>
	</Grid>
</UserControl>
