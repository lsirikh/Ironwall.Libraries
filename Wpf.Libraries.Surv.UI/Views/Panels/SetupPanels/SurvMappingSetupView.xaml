<UserControl x:Class="Wpf.Libraries.Surv.UI.Views.Panels.SetupPanels.SurvMappingSetupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Wpf.Libraries.Surv.UI.Views.Panels.SetupPanels"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:utils="clr-namespace:Ironwall.Libraries.Utils;assembly=Ironwall.Libraries.Utils"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<utils:BindingProxy x:Key="ViewModelProxy" Data="{Binding}" />
	</UserControl.Resources>
	<Grid Height="340">
		<Grid.RowDefinitions>
			<RowDefinition Height="50" />
			<RowDefinition Height="1*" />
			<RowDefinition Height="40" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0"
              Margin="10 10">
			<Grid.RowDefinitions>
				<RowDefinition Height="30" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*" />
				<ColumnDefinition Width="2*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Column="0"
                       Grid.ColumnSpan="2"
                       VerticalAlignment="Center"
                       Foreground="White"
                       FontWeight="Bold"
                       Style="{StaticResource BodyTextBlockStyle}"
                       Text="{DynamicResource SurvMapping_DataGridTitle}" />

			<!-- Add Button -->
			<Button Grid.Column="3"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource Add}"
					IsEnabled="{Binding IsButtonEnable}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickInsertButton($source, $eventArgs]
				</cal:Message.Attach>
				<md:PackIcon Width="20"
                             Height="20"
                             Kind="AddBox" />
			</Button>
			<!-- Remove Button -->
			<Button Grid.Column="4"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource Remove}"
					IsEnabled="{Binding IsButtonEnable}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickDeleteButton($source, $eventArgs]
				</cal:Message.Attach>
				<md:PackIcon Width="20"
                             Height="20"
                             Kind="MinusBox" />
			</Button>
			<!-- Refresh Button -->
			<Button Grid.Column="5"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource Refresh}"
					IsEnabled="{Binding IsButtonEnable}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickReloadButton($source, $eventArgs)]
				</cal:Message.Attach>
				<Button.Content>
					<Grid>
						<ProgressBar Width="20"
									 Height="20"
									 Visibility="{Binding ReloadButtonEnable, Converter={StaticResource BoolToInverseVisibleConverter}}"
									 Style="{DynamicResource MaterialDesignCircularProgressBar}"
									 IsIndeterminate="True"
									 Value="44" />
						<md:PackIcon Kind="CircleArrows"
									 Width="20" Height="20"
									 Visibility="{Binding ReloadButtonEnable, Converter={StaticResource BooleanToVisibilityConverter}}"
									 ToolTip="{StaticResource Refresh}"/>
					</Grid>
				</Button.Content>

			</Button>
			<!-- Save Button -->
			<Button Grid.Column="6"
                    VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                    ToolTip="{DynamicResource Save}"
					IsEnabled="{Binding IsButtonEnable}"
                    md:RippleAssist.IsCentered="True">
				<cal:Message.Attach>
					[Event Click] = [Action OnClickSaveButton($source, $eventArgs]
				</cal:Message.Attach>

				<Button.Content>
					<Grid>
						<ProgressBar Width="20"
									 Height="20"
									 Visibility="{Binding SaveButtonEnable, Converter={StaticResource BoolToInverseVisibleConverter}}"
									 Style="{DynamicResource MaterialDesignCircularProgressBar}"
									 IsIndeterminate="True"
									 Value="44" />
						<md:PackIcon Kind="FloppyDisc"
									 Width="20" Height="20"
									 Visibility="{Binding SaveButtonEnable, Converter={StaticResource BooleanToVisibilityConverter}}"
									 ToolTip="{StaticResource Save}"/>
					</Grid>
				</Button.Content>
			</Button>

		</Grid>
		<Grid Height ="300"
			  Grid.Row="1">
			<ProgressBar Width="50"
						Height="50"
						Margin="16"
						Visibility="{Binding IsVisible, Converter={StaticResource BoolToInverseVisibleConverter}}"
						Style="{DynamicResource MaterialDesignCircularProgressBar}"
						IsIndeterminate="True"
						Value="44" />
		</Grid>
		<DataGrid Grid.Row="1"
				  Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                  ItemsSource="{Binding ViewModelProvider}"
                  AlternationCount="{Binding Items.Count, RelativeSource={RelativeSource Self}}"
                  Style="{StaticResource MaterialDesignDataGrid }"
                  AutoGenerateColumns="False"
                  EnableRowVirtualization="True"
                  CanUserSortColumns="True"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="True"
                  SelectionMode="Single"
                  SelectionUnit="FullRow"
                  SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                  CanUserAddRows="False"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Visible">
			<DataGrid.Columns>
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<CheckBox Style="{StaticResource MaterialDesignCheckBox}"
                                      IsChecked="{Binding IsSelected, Mode=TwoWay}">
								<cal:Message.Attach>
									[Event Click] = [Action OnClickCheckBoxItem($source, $eventArgs)];
								</cal:Message.Attach>
							</CheckBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>

					<DataGridTemplateColumn.Header>
						<Border Padding="0 0 0 0"
                                Margin="-2 0 0 0">
							<CheckBox Style="{StaticResource MaterialDesignCheckBox}"
                                      IsChecked="{Binding Data.IsAllChecked, Mode=TwoWay, Source={StaticResource ViewModelProxy}}"
                                      HorizontalAlignment="Center">
								<cal:Message.Attach>
									[Event Click] = [Action OnClickCheckBoxColumnHeader($source, $eventArgs)];
								</cal:Message.Attach>
							</CheckBox>
						</Border>
					</DataGridTemplateColumn.Header>
				</DataGridTemplateColumn>

				<!-- Id -->
				<DataGridTemplateColumn  Header="Id"
                                         SortMemberPath="Id"
                                         CanUserSort="True">
					<DataGridTemplateColumn.HeaderStyle>
						<Style TargetType="{x:Type DataGridColumnHeader}"
                               BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
							<Setter Property="HorizontalAlignment" Value="Center" />
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="BorderThickness" Value="0"/>
						</Style>
					</DataGridTemplateColumn.HeaderStyle>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="{Binding Id, UpdateSourceTrigger=PropertyChanged}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<!-- IdController -->
				<DataGridTextColumn Header="GroupNumber"
                                    Binding="{Binding GroupNumber}">
					<DataGridTextColumn.HeaderStyle>
						<Style TargetType="{x:Type DataGridColumnHeader}"
                               BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
							<Setter Property="HorizontalAlignment" Value="Center" />
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="BorderThickness" Value="0"/>
						</Style>
					</DataGridTextColumn.HeaderStyle>
					<DataGridTextColumn.ElementStyle>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="HorizontalAlignment"
                                    Value="Center" />
							<Setter Property="VerticalAlignment"
                                    Value="Center" />
						</Style>
					</DataGridTextColumn.ElementStyle>
				</DataGridTextColumn>
				
				<!-- GroupName -->
				<DataGridTextColumn Header="GroupName"
                                    Binding="{Binding GroupName}">
					<DataGridTextColumn.HeaderStyle>
						<Style TargetType="{x:Type DataGridColumnHeader}"
                               BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
							<Setter Property="HorizontalAlignment" Value="Center" />
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="BorderThickness" Value="0"/>
						</Style>
					</DataGridTextColumn.HeaderStyle>
					<DataGridTextColumn.ElementStyle>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="HorizontalAlignment"
                                    Value="Center" />
							<Setter Property="VerticalAlignment"
                                    Value="Center" />
						</Style>
					</DataGridTextColumn.ElementStyle>
				</DataGridTextColumn>

				<!-- EventId -->
				<DataGridTemplateColumn Header="Event"
										SortMemberPath="Event"
										CanUserSort="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="[" />
								<TextBlock Text="{Binding EventModel.Id}" />
								<TextBlock Text="]이벤트" />
								<TextBlock Text="(" />
								<TextBlock Text="{Binding EventModel.IpAddress}" />
								<TextBlock Text=")" />
							</StackPanel>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<ComboBox VerticalAlignment="Center"
									  ItemsSource="{Binding Data.SurvEventModelProvider, Source={StaticResource ViewModelProxy}}"
									  SelectedItem="{Binding EventModel, UpdateSourceTrigger=LostFocus}">
								<ComboBox.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</ComboBox.ItemsPanel>
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="[" />
											<TextBlock Text="{Binding Id}" />
											<TextBlock Text="]이벤트" />
											<TextBlock Text="(" />
											<TextBlock Text="{Binding IpAddress}" />
											<TextBlock Text=")" />
										</StackPanel>
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				

			</DataGrid.Columns>
		</DataGrid>
		<StackPanel Grid.Row="2"
                    VerticalAlignment="Center"
                    Margin="10"
                    Orientation="Horizontal">

			<!-- Mulitlingual -->
			<TextBlock Text="{DynamicResource DataGrid_SelectedItem}" />
			<TextBlock Text="{Binding SelectedItemCount, UpdateSourceTrigger=PropertyChanged}" />
		</StackPanel>
	</Grid>
</UserControl>

